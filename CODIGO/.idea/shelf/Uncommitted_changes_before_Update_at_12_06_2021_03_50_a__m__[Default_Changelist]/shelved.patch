Index: app/src/main/java/com/example/GUI/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GUI;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport APIs.RetrofitAPI;\r\nimport Models.APIResponse;\r\nimport Models.RegistroRequest;\r\nimport Models.SessionInfo;\r\nimport Models.VerificadorCamposRegistro;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n\r\n    EditText nombreET;\r\n    EditText apellidoET;\r\n    EditText dniET;\r\n    EditText emailET;\r\n    EditText passwordET;\r\n    EditText comisionET;\r\n    EditText grupoET;\r\n    Button boton;\r\n    ProgressBar progressBar;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_register);\r\n\r\n        nombreET = findViewById(R.id.nombre);\r\n        apellidoET = findViewById(R.id.apellido);\r\n        dniET = findViewById(R.id.dni);\r\n        emailET = findViewById(R.id.mail);\r\n        passwordET = findViewById(R.id.password);\r\n        comisionET = findViewById(R.id.comision);\r\n        grupoET = findViewById(R.id.grupo);\r\n        boton = findViewById(R.id.botonListo);\r\n        progressBar = findViewById(R.id.progressBar);\r\n\r\n        progressBar.setVisibility(View.INVISIBLE);\r\n\r\n        /*\r\n        nombreET.setText(\"Gonzalo\");\r\n        apellidoET.setText(\"Castro\");\r\n        dniET.setText(\"41639230\");\r\n        emailET.setText(\"gonzacastro99@gmail.com\");\r\n        passwordET.setText(\"unlam12345\");\r\n        grupoET.setText(\"1\");\r\n        comisionET.setText(\"2900\");\r\n\r\n\r\n         */\r\n        boton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                VerificadorCamposRegistro verificador = new VerificadorCamposRegistro(nombreET, apellidoET, dniET, emailET, passwordET, comisionET, grupoET);\r\n                if(verificador.verificarCampos()){\r\n                    postData(\r\n                            nombreET.getText().toString(),\r\n                            apellidoET.getText().toString(),\r\n                            dniET.getText().toString(),\r\n                            emailET.getText().toString(),\r\n                            passwordET.getText().toString(),\r\n                            comisionET.getText().toString(),\r\n                            grupoET.getText().toString()\r\n                    );\r\n                    progressBar.setVisibility(View.VISIBLE);\r\n                    nombreET.setEnabled(false);\r\n                    apellidoET.setEnabled(false);\r\n                    dniET.setEnabled(false);\r\n                    emailET.setEnabled(false);\r\n                    passwordET.setEnabled(false);\r\n                    comisionET.setEnabled(false);\r\n                    grupoET.setEnabled(false);\r\n                    boton.setEnabled(false);\r\n                }\r\n\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void postData(String name, String apellido, String dni, String email, String password, String comision, String grupo) {\r\n        Retrofit rf = new Retrofit.Builder()\r\n                .baseUrl(\"http://so-unlam.net.ar/\")\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n        RetrofitAPI rfApi = rf.create(RetrofitAPI.class);\r\n        RegistroRequest dr = new RegistroRequest(name, apellido, Integer.valueOf(dni), email, password, Integer.valueOf(comision), Integer.valueOf(grupo));\r\n        Call<APIResponse> call = rfApi.postRegister(dr);\r\n        call.enqueue(new Callback<APIResponse>() {\r\n            @Override\r\n            public void onResponse(Call<APIResponse> call, Response<APIResponse> response) {\r\n                Log.e(\"res\", response.toString());\r\n                APIResponse reg = response.body();\r\n                int code = response.code();\r\n                if(code == 200) {\r\n                    Toast.makeText(RegisterActivity.this, \"Registro completado\", Toast.LENGTH_LONG).show();\r\n                    Log.e(\"code\", String.valueOf(code));\r\n                    Log.e(\"res\", reg.toString());\r\n\r\n                    SessionInfo.authToken = reg.getToken();\r\n                    SessionInfo.refreshToken = reg.getToken_refresh();\r\n                    //SessionInfo si = new SessionInfo(reg.getToken());\r\n                    //Log.e(\"token\", si.getToken());\r\n                } else {\r\n\r\n                    Toast.makeText(RegisterActivity.this, \"Error, revise los campos\", Toast.LENGTH_LONG).show();\r\n                }\r\n                progressBar.setVisibility(View.INVISIBLE);\r\n                nombreET.setEnabled(true);\r\n                apellidoET.setEnabled(true);\r\n                dniET.setEnabled(true);\r\n                emailET.setEnabled(true);\r\n                passwordET.setEnabled(true);\r\n                comisionET.setEnabled(true);\r\n                grupoET.setEnabled(true);\r\n                boton.setEnabled(true);\r\n\r\n                LoginActivity.returnInstance().finish();\r\n                Intent sig = new Intent(RegisterActivity.this, HomeMenuActivity.class);\r\n                startActivity(sig);\r\n                finish();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<APIResponse> call, Throwable t) {\r\n                Toast.makeText(RegisterActivity.this, \"Error\", Toast.LENGTH_LONG).show();\r\n                Log.e(\"err\", t.getMessage());\r\n                progressBar.setVisibility(View.INVISIBLE);\r\n                nombreET.setEnabled(true);\r\n                apellidoET.setEnabled(true);\r\n                dniET.setEnabled(true);\r\n                emailET.setEnabled(true);\r\n                passwordET.setEnabled(true);\r\n                comisionET.setEnabled(true);\r\n                grupoET.setEnabled(true);\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/GUI/RegisterActivity.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/com/example/GUI/RegisterActivity.java	(date 1623479957698)
@@ -1,5 +1,6 @@
 package com.example.GUI;
 
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
@@ -9,13 +10,15 @@
 import android.widget.ProgressBar;
 import android.widget.Toast;
 
+import androidx.appcompat.app.AlertDialog;
 import androidx.appcompat.app.AppCompatActivity;
 
 import APIs.RetrofitAPI;
 import Models.APIResponse;
 import Models.RegistroRequest;
-import Models.SessionInfo;
-import Models.VerificadorCamposRegistro;
+import Utils.ConnectionController;
+import Utils.SessionInfo;
+import Utils.VerificadorCamposRegistro;
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
@@ -34,6 +37,8 @@
     Button boton;
     ProgressBar progressBar;
 
+    AlertDialog ad;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -65,28 +70,39 @@
         boton.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                VerificadorCamposRegistro verificador = new VerificadorCamposRegistro(nombreET, apellidoET, dniET, emailET, passwordET, comisionET, grupoET);
-                if(verificador.verificarCampos()){
-                    postData(
-                            nombreET.getText().toString(),
-                            apellidoET.getText().toString(),
-                            dniET.getText().toString(),
-                            emailET.getText().toString(),
-                            passwordET.getText().toString(),
-                            comisionET.getText().toString(),
-                            grupoET.getText().toString()
-                    );
-                    progressBar.setVisibility(View.VISIBLE);
-                    nombreET.setEnabled(false);
-                    apellidoET.setEnabled(false);
-                    dniET.setEnabled(false);
-                    emailET.setEnabled(false);
-                    passwordET.setEnabled(false);
-                    comisionET.setEnabled(false);
-                    grupoET.setEnabled(false);
-                    boton.setEnabled(false);
+                if(ConnectionController.checkConnection(getApplicationContext())) {
+                    VerificadorCamposRegistro verificador = new VerificadorCamposRegistro(nombreET, apellidoET, dniET, emailET, passwordET, comisionET, grupoET);
+                    if (verificador.verificarCampos()) {
+                        postData(
+                                nombreET.getText().toString(),
+                                apellidoET.getText().toString(),
+                                dniET.getText().toString(),
+                                emailET.getText().toString(),
+                                passwordET.getText().toString(),
+                                comisionET.getText().toString(),
+                                grupoET.getText().toString()
+                        );
+                        progressBar.setVisibility(View.VISIBLE);
+                        nombreET.setEnabled(false);
+                        apellidoET.setEnabled(false);
+                        dniET.setEnabled(false);
+                        emailET.setEnabled(false);
+                        passwordET.setEnabled(false);
+                        comisionET.setEnabled(false);
+                        grupoET.setEnabled(false);
+                        boton.setEnabled(false);
+                    }
+                } else {
+                    ad = new AlertDialog.Builder(RegisterActivity.this).setTitle("Error de conexión")
+                            .setMessage("Verifique conexión a internet y vuelva a iniciar la aplicación")
+                            .setPositiveButton("Salir", new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    finish();
+                                    LoginActivity.returnInstance().finish();
+                                }
+                            }).show();
                 }
-
             }
         });
 
@@ -113,8 +129,6 @@
 
                     SessionInfo.authToken = reg.getToken();
                     SessionInfo.refreshToken = reg.getToken_refresh();
-                    //SessionInfo si = new SessionInfo(reg.getToken());
-                    //Log.e("token", si.getToken());
                 } else {
 
                     Toast.makeText(RegisterActivity.this, "Error, revise los campos", Toast.LENGTH_LONG).show();
Index: app/src/main/java/com/example/GUI/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GUI;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport APIs.RetrofitAPI;\r\nimport Models.APIResponse;\r\nimport Models.LoginRequest;\r\nimport Models.SessionInfo;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private EditText inputUsername;\r\n    private  EditText inputPassword;\r\n    private Button loginButton;\r\n    private Button registerButton;\r\n    private ProgressBar pb;\r\n\r\n    static Activity thisActivity;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        thisActivity = this;\r\n        loginButton = findViewById(R.id.loginButton);\r\n\r\n        registerButton = findViewById(R.id.registerButton);\r\n\r\n        inputUsername = findViewById(R.id.EditTextUserName);\r\n        inputPassword = findViewById(R.id.EditTextPassword);\r\n        Intent nombreSimpatico = getIntent();\r\n        inputUsername.setText(nombreSimpatico.getExtras().getString(\"mail\"));\r\n        loginButton = findViewById(R.id.loginButton);\r\n        pb = findViewById(R.id.progressBar3);\r\n        pb.setVisibility(View.INVISIBLE);\r\n        inputPassword.setText(\"unlam12345\");\r\n        inputUsername.setText(\"gonzacastro99@gmail.com\");\r\n        loginButton.setOnClickListener(new View.OnClickListener(){\r\n\r\n            @Override\r\n            public void onClick(View v) {\r\n                String username = getInputUsername();\r\n                String password = getInputPassword();\r\n                postData(username, password);\r\n                pb.setVisibility(View.VISIBLE);\r\n                registerButton.setEnabled(false);\r\n                loginButton.setEnabled(false);\r\n                inputPassword.setEnabled(false);\r\n                inputUsername.setEnabled(false);\r\n            }\r\n        });\r\n        registerButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent i = new Intent(LoginActivity.this, RegisterActivity.class);\r\n                startActivity(i);\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private  String getInputUsername(){\r\n        return inputUsername.getText().toString();\r\n    }\r\n\r\n    public String getInputPassword(){\r\n        return inputPassword.getText().toString();\r\n    }\r\n\r\n    private void postData(String email, String password) {\r\n        Retrofit rf = new Retrofit.Builder()\r\n                .baseUrl(\"http://so-unlam.net.ar/\")\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n        RetrofitAPI rfApi = rf.create(RetrofitAPI.class);\r\n        LoginRequest lr = new LoginRequest(email, password);\r\n        Call<APIResponse> call = rfApi.postLogin(lr);\r\n        call.enqueue(new Callback<APIResponse>() {\r\n            @Override\r\n            public void onResponse(Call<APIResponse> call, Response<APIResponse> response) {\r\n                pb.setVisibility(View.INVISIBLE);\r\n                if(response.code() == 200) {\r\n                    Toast.makeText(LoginActivity.this, \"Login exitoso\", Toast.LENGTH_LONG).show();\r\n                    APIResponse ar = response.body();\r\n                    Log.e(\"response login\", ar.toString());\r\n                    SessionInfo.authToken = ar.getToken();\r\n                    SessionInfo.refreshToken = ar.getToken_refresh();\r\n                    Intent sig = new Intent(LoginActivity.this, HomeMenuActivity.class);\r\n                    startActivity(sig);\r\n                    finish();\r\n                } else {\r\n                    Toast.makeText(LoginActivity.this, \"Error de autenticacion\", Toast.LENGTH_LONG).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<APIResponse> call, Throwable t) {\r\n                pb.setVisibility(View.INVISIBLE);\r\n                Toast.makeText(LoginActivity.this, \"Error en la peticion, intente mas tarde\", Toast.LENGTH_LONG).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public static Activity returnInstance() {\r\n        return thisActivity;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/GUI/LoginActivity.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/com/example/GUI/LoginActivity.java	(date 1623479188350)
@@ -1,6 +1,8 @@
 package com.example.GUI;
 
 import android.app.Activity;
+import android.app.AlertDialog;
+import android.content.DialogInterface;
 import android.content.Intent;
 import android.os.Bundle;
 import android.util.Log;
@@ -15,7 +17,8 @@
 import APIs.RetrofitAPI;
 import Models.APIResponse;
 import Models.LoginRequest;
-import Models.SessionInfo;
+import Utils.ConnectionController;
+import Utils.SessionInfo;
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
@@ -32,6 +35,8 @@
 
     static Activity thisActivity;
 
+    AlertDialog ad;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
 
@@ -55,14 +60,26 @@
 
             @Override
             public void onClick(View v) {
-                String username = getInputUsername();
-                String password = getInputPassword();
-                postData(username, password);
-                pb.setVisibility(View.VISIBLE);
-                registerButton.setEnabled(false);
-                loginButton.setEnabled(false);
-                inputPassword.setEnabled(false);
-                inputUsername.setEnabled(false);
+                if(ConnectionController.checkConnection(getApplicationContext())) {
+                    String username = getInputUsername();
+                    String password = getInputPassword();
+                    postData(username, password);
+                    pb.setVisibility(View.VISIBLE);
+                    registerButton.setEnabled(false);
+                    loginButton.setEnabled(false);
+                    inputPassword.setEnabled(false);
+                    inputUsername.setEnabled(false);
+                } else {
+                    ad = new AlertDialog.Builder(LoginActivity.this).setTitle("Error de conexión")
+                            .setMessage("Verifique conexión a internet y vuelva a iniciar la aplicación")
+                            .setPositiveButton("Salir", new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    finish();
+                                }
+                            })
+                            .show();
+                }
             }
         });
         registerButton.setOnClickListener(new View.OnClickListener() {
@@ -105,6 +122,11 @@
                     startActivity(sig);
                     finish();
                 } else {
+                    pb.setVisibility(View.INVISIBLE);
+                    registerButton.setEnabled(true);
+                    loginButton.setEnabled(true);
+                    inputPassword.setEnabled(true);
+                    inputUsername.setEnabled(true);
                     Toast.makeText(LoginActivity.this, "Error de autenticacion", Toast.LENGTH_LONG).show();
                 }
             }
Index: app/src/main/java/com/example/GUI/GmailAuthentication.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GUI;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.BroadcastReceiver;\r\nimport android.content.Context;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.content.IntentFilter;\r\nimport android.os.BatteryManager;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\nimport APIs.EmailAPI;\r\n\r\npublic class GmailAuthentication extends AppCompatActivity {\r\n    private static final long MILLISTOSECONDS = 1000;\r\n    private static final long SECONDSTIMEOUT = 1;\r\n    private final String regExMail = \"[\\\\w\\\\-.]*@[\\\\w]*(\\\\.[a-z]{2,3})+\";\r\n\r\n    private static EditText inputGmail;\r\n    private static EditText inputCode;\r\n    private Button sendCodeButton;\r\n    private static Button authButton;\r\n    private static long actualCode;\r\n    private static float percentage;\r\n\r\n    private static int sendCodeDisabled = 0;\r\n    private long startTime = 0;\r\n    private long endTime = 0;\r\n\r\n    private ProgressBar pb;\r\n\r\n    Handler h;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_gmail_authentication);\r\n\r\n        BroadcastReceiver batteryInfo = new BroadcastReceiver() {\r\n            @Override\r\n            public void onReceive(Context context, Intent intent) {\r\n               //GmailAuthentication.level = intent.getIntExtra(BatteryManager.EXTRA_LEVEL,0);\r\n                /*\r\n                if(Intent.ACTION_BATTERY_CHANGED.equals(intent.ACTION_BATTERY_CHANGED)){\r\n                    GmailAuthentication.level = intent.getIntExtra(\"xd\",0);\r\n                }\r\n\r\n                 */\r\n\r\n            }\r\n        };\r\n\r\n        IntentFilter iFilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\n        Intent batteryStatus = this.registerReceiver(null,iFilter);\r\n        int level = batteryStatus.getIntExtra(BatteryManager.EXTRA_LEVEL,-1);\r\n        int scale = batteryStatus.getIntExtra(BatteryManager.EXTRA_SCALE,-1);\r\n\r\n        GmailAuthentication.percentage = level *100 /(float) scale;\r\n\r\n\r\n        new AlertDialog.Builder(this).setTitle(\"Nivel de bateria actual\").setMessage(\"\"+(int)GmailAuthentication.percentage + \"%\" )\r\n                .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                    }\r\n                }).show();\r\n\r\n        Button authButton = findViewById(R.id.authButton);\r\n        EditText inputCode = findViewById(R.id.editTextCode);\r\n        this.inputCode = inputCode;\r\n        this.authButton = authButton;\r\n        authButton.setEnabled(false);\r\n        inputCode.setEnabled(false);\r\n        //esto esta ´para saltear la autenticacion\r\n        authButton.setEnabled(true);\r\n        /*\r\n        authButton = findViewById(R.id.authButton);\r\n\r\n\r\n         */\r\n        inputGmail = findViewById(R.id.editTextMail);\r\n\r\n        pb = findViewById(R.id.progressBar2);\r\n        pb.setVisibility(View.INVISIBLE);\r\n\r\n        h = new Handler();\r\n\r\n        sendCodeButton = findViewById(R.id.sendCodeButton);\r\n        sendCodeButton.setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View v) {\r\n                String gmail = inputGmail.getText().toString();\r\n                Pattern patron = Pattern.compile(regExMail);\r\n                Matcher m = patron.matcher(gmail);\r\n                if(m.find()) {\r\n                    if (sendCodeDisabled != 0) {\r\n                        endTime = System.currentTimeMillis()/MILLISTOSECONDS;\r\n                        long secondsRunning = endTime - startTime;\r\n                        if( (secondsRunning) < SECONDSTIMEOUT){\r\n                            Toast.makeText(getApplicationContext(), \"Tiene que esperar \" + (SECONDSTIMEOUT-secondsRunning) + \" segundos\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        else{\r\n                            sendCodeDisabled = 0;\r\n                        }\r\n                    }\r\n                    if(sendCodeDisabled == 0){\r\n                        pb.setVisibility(View.VISIBLE);\r\n                        startTime = System.currentTimeMillis()/MILLISTOSECONDS;\r\n                        sendCodeDisabled=1;\r\n                        actualCode = generateCode();\r\n                        Log.e(\"code2:\",String.valueOf(actualCode));\r\n                        sendMail(gmail, actualCode);\r\n                        Toast.makeText(getApplicationContext(), \"Enviando mail...\", Toast.LENGTH_SHORT).show();\r\n                        GmailAuthentication.inputCode.setEnabled(true);\r\n                    }\r\n                } else {\r\n                    Toast.makeText(getApplicationContext(), \"Formato mail incorrecto\", Toast.LENGTH_LONG).show();\r\n                    GmailAuthentication.authButton.setEnabled(false);\r\n                }\r\n            }\r\n        });\r\n\r\n        authButton.setOnClickListener(new View.OnClickListener(){\r\n            @Override\r\n            public void onClick(View v) {\r\n\r\n                //esto esta para saltear la autenticacion\r\n                Intent loginScreen = new Intent(GmailAuthentication.this,LoginActivity.class);\r\n                loginScreen.putExtra(\"mail\",GmailAuthentication.inputGmail.getText().toString());\r\n                startActivity(loginScreen);\r\n                finish();\r\n\r\n                 /*\r\n\r\n                long userCodeInput;\r\n                if(inputCode.getText().toString().length() != 0) {\r\n                    Log.e(\"estado\", \"entre al if\");\r\n                    Log.e(\"valor\", inputCode.getText().toString());\r\n                    userCodeInput = Long.valueOf(inputCode.getText().toString());\r\n                    if(userCodeInput == actualCode){\r\n                        Intent loginScreen = new Intent(GmailAuthentication.this, LoginActivity.class);\r\n                        loginScreen.putExtra(\"mail\",GmailAuthentication.inputGmail.getText().toString());\r\n                        startActivity(loginScreen);\r\n                        finish();\r\n                    }\r\n                    else{\r\n                        Toast.makeText(getApplicationContext(), \"El codigo es incorrecto o caduco\", Toast.LENGTH_LONG).show();\r\n                        inputCode.setText(\"\");\r\n                    }\r\n                } else {\r\n                    Toast.makeText(getApplicationContext(), \"Campo vacio\", Toast.LENGTH_LONG).show();\r\n                }\r\n\r\n                  */\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void sendMail(String gmail, long code){\r\n        EmailAPI a = new EmailAPI(gmail,code, getApplicationContext());\r\n        Runnable at = new AuxThread(a, h);\r\n        Thread t = new Thread(at);\r\n        t.start();\r\n    }\r\n\r\n    class AuxThread implements Runnable {\r\n        EmailAPI a;\r\n        Handler h;\r\n        public AuxThread(EmailAPI a, Handler h) {\r\n            this.a = a;\r\n            this.h = h;\r\n        }\r\n        @Override\r\n        public void run() {\r\n            Log.e(\"Estado\", \"Empieza A\");\r\n            try {\r\n                a.start();\r\n                a.join();\r\n                Log.e(\"Estado\", \"Ya espere a A\");\r\n                h.post(new Runnable() {\r\n                    @Override\r\n                    public void run() {\r\n                        Toast.makeText(getApplicationContext(), \"Mail enviado\", Toast.LENGTH_SHORT).show();\r\n                        Log.e(\"Estado\", \"Voy a activarlo\");\r\n                        authButton.setEnabled(true);\r\n                        pb.setVisibility(View.INVISIBLE);\r\n                    }\r\n                });\r\n            } catch (InterruptedException e) {\r\n                Log.e(\"Estado\", \"Falle en algo\");\r\n                authButton.setEnabled(false);\r\n                pb.setVisibility(View.INVISIBLE);\r\n                e.printStackTrace();\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private long generateCode(){\r\n        int min = 1;\r\n        int max = 999999;\r\n        long authCode = (System.currentTimeMillis() + ((long)Math.random()*(max-min+1)+min))%999999;\r\n        Log.e(\"code:\",String.valueOf(authCode));\r\n        return authCode;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    /*\r\n    private boolean sendMail2(String mail){\r\n\r\n    }\r\n    */\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/GUI/GmailAuthentication.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/com/example/GUI/GmailAuthentication.java	(date 1623478931607)
@@ -22,6 +22,7 @@
 import java.util.regex.Pattern;
 
 import APIs.EmailAPI;
+import Utils.ConnectionController;
 
 public class GmailAuthentication extends AppCompatActivity {
     private static final long MILLISTOSECONDS = 1000;
@@ -43,6 +44,8 @@
 
     Handler h;
 
+    AlertDialog ad;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -69,8 +72,7 @@
 
         GmailAuthentication.percentage = level *100 /(float) scale;
 
-
-        new AlertDialog.Builder(this).setTitle("Nivel de bateria actual").setMessage(""+(int)GmailAuthentication.percentage + "%" )
+        new AlertDialog.Builder(this).setTitle("Nivel de bateria actual").setMessage(""+(int)GmailAuthentication.percentage + "%\nConectado: " + ConnectionController.checkConnection(getApplicationContext()))
                 .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
                     @Override
                     public void onClick(DialogInterface dialog, int which) {
@@ -84,11 +86,8 @@
         authButton.setEnabled(false);
         inputCode.setEnabled(false);
         //esto esta ´para saltear la autenticacion
-        authButton.setEnabled(true);
+        //authButton.setEnabled(true);
         /*
-        authButton = findViewById(R.id.authButton);
-
-
          */
         inputGmail = findViewById(R.id.editTextMail);
 
@@ -101,33 +100,44 @@
         sendCodeButton.setOnClickListener(new View.OnClickListener(){
             @Override
             public void onClick(View v) {
-                String gmail = inputGmail.getText().toString();
-                Pattern patron = Pattern.compile(regExMail);
-                Matcher m = patron.matcher(gmail);
-                if(m.find()) {
-                    if (sendCodeDisabled != 0) {
-                        endTime = System.currentTimeMillis()/MILLISTOSECONDS;
-                        long secondsRunning = endTime - startTime;
-                        if( (secondsRunning) < SECONDSTIMEOUT){
-                            Toast.makeText(getApplicationContext(), "Tiene que esperar " + (SECONDSTIMEOUT-secondsRunning) + " segundos", Toast.LENGTH_SHORT).show();
-                        }
-                        else{
-                            sendCodeDisabled = 0;
-                        }
-                    }
-                    if(sendCodeDisabled == 0){
-                        pb.setVisibility(View.VISIBLE);
-                        startTime = System.currentTimeMillis()/MILLISTOSECONDS;
-                        sendCodeDisabled=1;
-                        actualCode = generateCode();
-                        Log.e("code2:",String.valueOf(actualCode));
-                        sendMail(gmail, actualCode);
-                        Toast.makeText(getApplicationContext(), "Enviando mail...", Toast.LENGTH_SHORT).show();
-                        GmailAuthentication.inputCode.setEnabled(true);
-                    }
-                } else {
-                    Toast.makeText(getApplicationContext(), "Formato mail incorrecto", Toast.LENGTH_LONG).show();
-                    GmailAuthentication.authButton.setEnabled(false);
+                if(ConnectionController.checkConnection(getApplicationContext())) {
+                    String gmail = inputGmail.getText().toString();
+                    Pattern patron = Pattern.compile(regExMail);
+                    Matcher m = patron.matcher(gmail);
+                    if(m.find()) {
+                        if (sendCodeDisabled != 0) {
+                            endTime = System.currentTimeMillis()/MILLISTOSECONDS;
+                            long secondsRunning = endTime - startTime;
+                            if( (secondsRunning) < SECONDSTIMEOUT){
+                                Toast.makeText(getApplicationContext(), "Tiene que esperar " + (SECONDSTIMEOUT-secondsRunning) + " segundos", Toast.LENGTH_SHORT).show();
+                            }
+                            else{
+                                sendCodeDisabled = 0;
+                            }
+                        }
+                        if(sendCodeDisabled == 0){
+                            pb.setVisibility(View.VISIBLE);
+                            startTime = System.currentTimeMillis()/MILLISTOSECONDS;
+                            sendCodeDisabled=1;
+                            actualCode = generateCode();
+                            Log.e("code2:",String.valueOf(actualCode));
+                            sendMail(gmail, actualCode);
+                            Toast.makeText(getApplicationContext(), "Enviando mail...", Toast.LENGTH_SHORT).show();
+                            GmailAuthentication.inputCode.setEnabled(true);
+                        }
+                    } else {
+                        Toast.makeText(getApplicationContext(), "Formato mail incorrecto", Toast.LENGTH_LONG).show();
+                        GmailAuthentication.authButton.setEnabled(false);
+                    }
+                } else {
+                    ad = new AlertDialog.Builder(GmailAuthentication.this).setTitle("Error de conexión")
+                            .setMessage("Verifique conexión a internet y vuelva a iniciar la aplicación")
+                            .setPositiveButton("Salir", new DialogInterface.OnClickListener() {
+                                @Override
+                                public void onClick(DialogInterface dialog, int which) {
+                                    finish();
+                                }
+                            }).show();
                 }
             }
         });
@@ -137,12 +147,15 @@
             public void onClick(View v) {
 
                 //esto esta para saltear la autenticacion
+                /*
                 Intent loginScreen = new Intent(GmailAuthentication.this,LoginActivity.class);
                 loginScreen.putExtra("mail",GmailAuthentication.inputGmail.getText().toString());
                 startActivity(loginScreen);
                 finish();
 
-                 /*
+
+                 */
+
 
                 long userCodeInput;
                 if(inputCode.getText().toString().length() != 0) {
@@ -163,7 +176,7 @@
                     Toast.makeText(getApplicationContext(), "Campo vacio", Toast.LENGTH_LONG).show();
                 }
 
-                  */
+
 
             }
         });
Index: app/src/main/java/com/example/GUI/HomeMenuActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.GUI;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.webkit.WebSettings;\r\nimport android.webkit.WebView;\r\nimport android.widget.Button;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport APIs.RetrofitAPI;\r\nimport Models.APIResponse;\r\nimport Models.SessionInfo;\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport retrofit2.Retrofit;\r\nimport retrofit2.converter.gson.GsonConverterFactory;\r\n\r\npublic class HomeMenuActivity extends AppCompatActivity {\r\n\r\n    Button botonIzq;\r\n    Button botonDer;\r\n    WebView miVisorWeb;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_home_menu);\r\n        miVisorWeb = (WebView) findViewById(R.id.visorWeb);\r\n        final WebSettings ajustesVisorWeb = miVisorWeb.getSettings();\r\n        ajustesVisorWeb.setJavaScriptEnabled(true);\r\n        miVisorWeb.loadUrl(\"https://www.google.com\");\r\n        botonDer = findViewById(R.id.botonDer);\r\n        botonIzq = findViewById(R.id.botonIzq);\r\n    }\r\n\r\n    private void putData(Map<String, String> headers) {\r\n        Retrofit rf = new Retrofit.Builder()\r\n                .baseUrl(\"http://so-unlam.net.ar/\")\r\n                .addConverterFactory(GsonConverterFactory.create())\r\n                .build();\r\n        RetrofitAPI rfApi = rf.create(RetrofitAPI.class);\r\n        Call<APIResponse> call = rfApi.putRefreshToken(headers);\r\n        call.enqueue(new Callback<APIResponse>() {\r\n            @Override\r\n            public void onResponse(Call<APIResponse> call, Response<APIResponse> response) {\r\n                if(response.code() == 200) {\r\n                    SessionInfo.authToken = response.body().getToken();\r\n                    Log.e(\"status\", String.valueOf(response.body().isSuccess()));\r\n                    Log.e(\"token nuevo\", SessionInfo.authToken);\r\n                } else {\r\n                    Log.e(\"status\", String.valueOf(response.body().isSuccess()));\r\n                    Log.e(\"error\", \"a\");\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<APIResponse> call, Throwable t) {\r\n                Log.e(\"error\", \"b\");\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/GUI/HomeMenuActivity.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/com/example/GUI/HomeMenuActivity.java	(date 1623480116832)
@@ -5,16 +5,19 @@
 import android.os.Bundle;
 import android.util.Log;
 import android.view.View;
-import android.webkit.WebSettings;
-import android.webkit.WebView;
 import android.widget.Button;
 
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
 import java.util.HashMap;
 import java.util.Map;
 
 import APIs.RetrofitAPI;
-import Models.APIResponse;
-import Models.SessionInfo;
+import Models.EventRequest;
+import Models.EventResponse;
+import Utils.SessionInfo;
 import retrofit2.Call;
 import retrofit2.Callback;
 import retrofit2.Response;
@@ -23,45 +26,11 @@
 
 public class HomeMenuActivity extends AppCompatActivity {
 
-    Button botonIzq;
-    Button botonDer;
-    WebView miVisorWeb;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_home_menu);
-        miVisorWeb = (WebView) findViewById(R.id.visorWeb);
-        final WebSettings ajustesVisorWeb = miVisorWeb.getSettings();
-        ajustesVisorWeb.setJavaScriptEnabled(true);
-        miVisorWeb.loadUrl("https://www.google.com");
-        botonDer = findViewById(R.id.botonDer);
-        botonIzq = findViewById(R.id.botonIzq);
-    }
 
-    private void putData(Map<String, String> headers) {
-        Retrofit rf = new Retrofit.Builder()
-                .baseUrl("http://so-unlam.net.ar/")
-                .addConverterFactory(GsonConverterFactory.create())
-                .build();
-        RetrofitAPI rfApi = rf.create(RetrofitAPI.class);
-        Call<APIResponse> call = rfApi.putRefreshToken(headers);
-        call.enqueue(new Callback<APIResponse>() {
-            @Override
-            public void onResponse(Call<APIResponse> call, Response<APIResponse> response) {
-                if(response.code() == 200) {
-                    SessionInfo.authToken = response.body().getToken();
-                    Log.e("status", String.valueOf(response.body().isSuccess()));
-                    Log.e("token nuevo", SessionInfo.authToken);
-                } else {
-                    Log.e("status", String.valueOf(response.body().isSuccess()));
-                    Log.e("error", "a");
-                }
-            }
+    }
 
-            @Override
-            public void onFailure(Call<APIResponse> call, Throwable t) {
-                Log.e("error", "b");
-            }
-        });
-    }
 }
\ No newline at end of file
Index: app/src/main/java/Models/VerificadorCamposRegistro.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Models;\r\n\r\nimport android.widget.EditText;\r\n\r\nimport java.util.regex.Matcher;\r\nimport java.util.regex.Pattern;\r\n\r\npublic class VerificadorCamposRegistro {\r\n    private final static boolean CAMPOS_VALIDOS = true;\r\n    private final static boolean CAMPOS_INVALIDOS = false;\r\n    private final static String REG_EX_MAIL = \"[\\\\w\\\\-.]*@[\\\\w]*(\\\\.[a-z]{2,3})+\";\r\n\r\n    private EditText nombre, apellido, dni, email, contrasenia, comision, grupo;\r\n\r\n    public VerificadorCamposRegistro(EditText nombre, EditText apellido, EditText dni, EditText email, EditText contrasenia, EditText comision, EditText grupo){\r\n        this.nombre = nombre;\r\n        this.apellido = apellido;\r\n        this.dni = dni;\r\n        this.email = email;\r\n        this.contrasenia = contrasenia;\r\n        this.comision = comision;\r\n        this.grupo = grupo;\r\n    }\r\n\r\n    public boolean verificarCampos(){\r\n        int nError = 0;\r\n        Pattern patron = Pattern.compile(REG_EX_MAIL);\r\n        Matcher m = patron.matcher(email.getText().toString());\r\n\r\n        if(nombre.getText().toString().isEmpty()){\r\n            nombre.setError(\"El campo no puede estar vacio\");\r\n            nError = 1;\r\n        }\r\n        if(apellido.getText().toString().isEmpty()){\r\n            apellido.setError(\"Debe ingresar un apellido de forma obligatoria\");\r\n            nError = 1;\r\n        }\r\n        if(dni.getText().toString().isEmpty()){\r\n            dni.setError(\"El campo DNI es obligatorio\");\r\n            nError = 1;\r\n        }\r\n\r\n        if(email.getText().toString().isEmpty() || !m.find()){\r\n            email.setError(\"Debe ingresar un email con formato valido\");\r\n            nError = 1;\r\n        }\r\n        if(contrasenia.getText().toString().isEmpty() || contrasenia.getText().length() < 8){\r\n            contrasenia.setError(\"Debe ingresar una clave valida\");\r\n            nError = 1;\r\n        }\r\n        if(comision.getText().toString().isEmpty() || (!comision.getText().toString().equals(\"2900\") && (!comision.getText().toString().equals(\"3900\")))){\r\n            comision.setError(\"Debe ingresar una comision valida\");\r\n            nError = 1;\r\n        }\r\n        if(grupo.getText().toString().isEmpty()){\r\n            grupo.setError(\"el campo no puede ser vacio\");\r\n            nError = 1;\r\n        }\r\n        if(nError != 0) {\r\n            return CAMPOS_INVALIDOS;\r\n        }\r\n        return CAMPOS_VALIDOS;\r\n    }\r\n}
===================================================================
--- app/src/main/java/Models/VerificadorCamposRegistro.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/Utils/VerificadorCamposRegistro.java	(date 1623478931571)
@@ -1,4 +1,4 @@
-package Models;
+package Utils;
 
 import android.widget.EditText;
 
Index: app/src/main/java/Utils/ConnectionController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Utils/ConnectionController.java	(date 1623478931742)
+++ app/src/main/java/Utils/ConnectionController.java	(date 1623478931742)
@@ -0,0 +1,16 @@
+package Utils;
+
+import android.content.Context;
+import android.net.ConnectivityManager;
+import android.net.NetworkInfo;
+
+public class ConnectionController {
+    private static ConnectivityManager cm;
+    private static NetworkInfo ni;
+
+    public static boolean checkConnection(Context c) {
+        cm = (ConnectivityManager) c.getSystemService(Context.CONNECTIVITY_SERVICE);
+        ni = cm.getActiveNetworkInfo();
+        return (ni != null && ni.isConnected());
+    }
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"PLATFORM\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveModulePerSourceSet\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/gradle.xml	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ .idea/gradle.xml	(date 1623471081643)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: app/src/main/res/layout/activity_home_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".HomeMenuActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"409dp\"\r\n        android:layout_height=\"729dp\"\r\n        android:layout_marginStart=\"1dp\"\r\n        android:layout_marginLeft=\"1dp\"\r\n        android:layout_marginTop=\"1dp\"\r\n        android:layout_marginEnd=\"1dp\"\r\n        android:layout_marginRight=\"1dp\"\r\n        android:layout_marginBottom=\"1dp\"\r\n        android:orientation=\"vertical\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <WebView\r\n            android:id=\"@+id/visorWeb\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"641dp\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <Button\r\n                android:id=\"@+id/botonIzq\"\r\n                android:layout_width=\"83dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Button\" />\r\n\r\n            <Button\r\n                android:id=\"@+id/botonDer\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:text=\"Button\" />\r\n\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_home_menu.xml	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/res/layout/activity_home_menu.xml	(date 1623378008907)
@@ -6,46 +6,21 @@
     android:layout_height="match_parent"
     tools:context=".HomeMenuActivity">
 
-    <LinearLayout
-        android:layout_width="409dp"
-        android:layout_height="729dp"
-        android:layout_marginStart="1dp"
-        android:layout_marginLeft="1dp"
-        android:layout_marginTop="1dp"
-        android:layout_marginEnd="1dp"
-        android:layout_marginRight="1dp"
-        android:layout_marginBottom="1dp"
-        android:orientation="vertical"
-        app:layout_constraintBottom_toBottomOf="parent"
-        app:layout_constraintEnd_toEndOf="parent"
-        app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent">
-
-        <WebView
-            android:id="@+id/visorWeb"
-            android:layout_width="match_parent"
-            android:layout_height="641dp" />
-
-        <LinearLayout
-            android:layout_width="match_parent"
-            android:layout_height="match_parent"
-            android:orientation="horizontal">
-
-            <Button
-                android:id="@+id/botonIzq"
-                android:layout_width="83dp"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="Button" />
-
-            <Button
-                android:id="@+id/botonDer"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_weight="1"
-                android:text="Button" />
-
-        </LinearLayout>
-    </LinearLayout>
+    <Button
+        android:id="@+id/botonIzq"
+        android:layout_width="83dp"
+        android:layout_height="wrap_content"
+        android:layout_marginStart="180dp"
+        android:layout_marginLeft="180dp"
+        android:layout_marginTop="268dp"
+        android:layout_marginEnd="148dp"
+        android:layout_marginRight="148dp"
+        android:layout_marginBottom="407dp"
+        android:layout_weight="1"
+        android:text="Button"
+        app:layout_constraintBottom_toBottomOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
 
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/Models/Event.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Models/Event.java	(date 1623379120162)
+++ app/src/main/java/Models/Event.java	(date 1623379120162)
@@ -0,0 +1,63 @@
+package Models;
+
+import com.google.gson.annotations.SerializedName;
+
+public class Event {
+    @SerializedName("type_events")
+    private String type_events;
+    @SerializedName("description")
+    private String description;
+    @SerializedName("dni")
+    private int dni;
+    @SerializedName("id")
+    private int id;
+
+    public Event(String type_events, String description, int dni, int id) {
+        this.type_events = type_events;
+        this.description = description;
+        this.dni = dni;
+        this.id = id;
+    }
+
+    public String getType_events() {
+        return type_events;
+    }
+
+    public void setType_events(String type_events) {
+        this.type_events = type_events;
+    }
+
+    public String getDescription() {
+        return description;
+    }
+
+    public void setDescription(String description) {
+        this.description = description;
+    }
+
+    public int getDni() {
+        return dni;
+    }
+
+    public void setDni(int dni) {
+        this.dni = dni;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    @Override
+    public String toString() {
+        return "Event{" +
+                "type_events='" + type_events + '\'' +
+                ", description='" + description + '\'' +
+                ", dni=" + dni +
+                ", id=" + id +
+                '}';
+    }
+}
Index: app/src/main/java/Models/EventResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Models/EventResponse.java	(date 1623378294946)
+++ app/src/main/java/Models/EventResponse.java	(date 1623378294946)
@@ -0,0 +1,51 @@
+package Models;
+
+import com.google.gson.annotations.SerializedName;
+
+public class EventResponse {
+    @SerializedName("success")
+    private boolean success;
+    @SerializedName("env")
+    private String env;
+    @SerializedName("event")
+    private Event event;
+
+    public EventResponse(boolean success, String env, Event event) {
+        this.success = success;
+        this.env = env;
+        this.event = event;
+    }
+
+    public boolean isSuccess() {
+        return success;
+    }
+
+    public void setSuccess(boolean success) {
+        this.success = success;
+    }
+
+    public String getEnv() {
+        return env;
+    }
+
+    public void setEnv(String env) {
+        this.env = env;
+    }
+
+    public Event getEvent() {
+        return event;
+    }
+
+    public void setEvent(Event event) {
+        this.event = event;
+    }
+
+    @Override
+    public String toString() {
+        return "EventResponse{" +
+                "success=" + success +
+                ", env='" + env + '\'' +
+                ", event=" + event.toString() +
+                '}';
+    }
+}
Index: app/src/main/java/Models/EventRequest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Models;\r\n\r\npublic class EventRequest {\r\n    private String env;\r\n    private String type_events;\r\n    private String description;\r\n\r\n    public EventRequest(String type_events, String description) {\r\n        this.env = \"TEST\";\r\n        this.type_events = type_events;\r\n        this.description = description;\r\n    }\r\n\r\n    public String getDescription() {\r\n        return description;\r\n    }\r\n\r\n    public void setDescription(String description) {\r\n        this.description = description;\r\n    }\r\n\r\n    public String getType_events() {\r\n        return type_events;\r\n    }\r\n\r\n    public void setType_events(String type_events) {\r\n        this.type_events = type_events;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Models/EventRequest.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/Models/EventRequest.java	(date 1623378962308)
@@ -6,7 +6,7 @@
     private String description;
 
     public EventRequest(String type_events, String description) {
-        this.env = "TEST";
+        this.env = "PROD";
         this.type_events = type_events;
         this.description = description;
     }
Index: app/src/main/java/APIs/RetrofitAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package APIs;\r\n\r\nimport java.util.Map;\r\n\r\nimport Models.LoginRequest;\r\nimport Models.RegistroRequest;\r\nimport Models.APIResponse;\r\nimport retrofit2.Call;\r\nimport retrofit2.http.Body;\r\nimport retrofit2.http.HeaderMap;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.PUT;\r\n\r\n\r\npublic interface RetrofitAPI {\r\n\r\n    @POST(\"api/api/register\")\r\n    Call<APIResponse> postRegister(@Body RegistroRequest dr);\r\n\r\n    @POST(\"api/api/login\")\r\n    Call<APIResponse> postLogin(@Body LoginRequest lr);\r\n\r\n    @PUT(\"api/api/refresh\")\r\n    Call<APIResponse> putRefreshToken(@HeaderMap Map<String, String> headers);\r\n\r\n    //@POST(\"api/api/event\")\r\n    //Call<APIResponse> putEvent()\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/APIs/RetrofitAPI.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/APIs/RetrofitAPI.java	(date 1623377530018)
@@ -2,6 +2,8 @@
 
 import java.util.Map;
 
+import Models.EventRequest;
+import Models.EventResponse;
 import Models.LoginRequest;
 import Models.RegistroRequest;
 import Models.APIResponse;
@@ -23,7 +25,7 @@
     @PUT("api/api/refresh")
     Call<APIResponse> putRefreshToken(@HeaderMap Map<String, String> headers);
 
-    //@POST("api/api/event")
-    //Call<APIResponse> putEvent()
+    @POST("api/api/event")
+    Call<EventResponse> postEvent(@HeaderMap Map<String, String> headers, @Body EventRequest er);
 
 }
Index: app/src/main/java/Models/SessionInfo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Models;\r\n\r\npublic class SessionInfo {\r\n    public static String authToken;\r\n    public static String refreshToken;\r\n\r\n    /*\r\n    public SessionInfo(String at) {\r\n        authToken = at;\r\n    }\r\n\r\n    public String getToken() {\r\n        return authToken;\r\n    }\r\n\r\n     */\r\n}\r\n
===================================================================
--- app/src/main/java/Models/SessionInfo.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/Utils/SessionInfo.java	(date 1623478931540)
@@ -1,4 +1,4 @@
-package Models;
+package Utils;
 
 public class SessionInfo {
     public static String authToken;
Index: app/src/main/java/Models/APIResponse.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Models;\r\n\r\nimport com.google.gson.annotations.SerializedName;\r\n\r\npublic class APIResponse {\r\n\r\n    @SerializedName(\"success\")\r\n    private boolean success;\r\n    @SerializedName(\"token\")\r\n    private String token;\r\n    @SerializedName(\"token_refresh\")\r\n    private String token_refresh;\r\n    @SerializedName(\"env\")\r\n    private String env;\r\n    @SerializedName(\"msg\")\r\n    private String msg;\r\n\r\n    public APIResponse(boolean success, String token, String token_refresh, String env) {\r\n        this.success = success;\r\n        this.token = token;\r\n        this.token_refresh = token_refresh;\r\n        this.env = env;\r\n    }\r\n\r\n    public boolean isSuccess() {\r\n        return success;\r\n    }\r\n\r\n    public void setSuccess(boolean success) {\r\n        this.success = success;\r\n    }\r\n\r\n    public String getToken() {\r\n        return token;\r\n    }\r\n\r\n    public void setToken(String token) {\r\n        this.token = token;\r\n    }\r\n\r\n    public String getToken_refresh() {\r\n        return token_refresh;\r\n    }\r\n\r\n    public void setToken_refresh(String token_refresh) {\r\n        this.token_refresh = token_refresh;\r\n    }\r\n\r\n    public String getEnv() {\r\n        return env;\r\n    }\r\n\r\n    public void setEnv(String env) {\r\n        this.env = env;\r\n    }\r\n\r\n    public String getMsg() {\r\n        return msg;\r\n    }\r\n\r\n    public void setMsg(String msg) {\r\n        this.msg = msg;\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"RegistroResponse{\" +\r\n                \"success=\" + success +\r\n                \", token='\" + token + '\\'' +\r\n                \", token_refresh='\" + token_refresh + '\\'' +\r\n                \", env='\" + env + '\\'' +\r\n                '}';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/Models/APIResponse.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/Models/APIResponse.java	(date 1623376419689)
@@ -12,8 +12,6 @@
     private String token_refresh;
     @SerializedName("env")
     private String env;
-    @SerializedName("msg")
-    private String msg;
 
     public APIResponse(boolean success, String token, String token_refresh, String env) {
         this.success = success;
@@ -54,17 +52,9 @@
         this.env = env;
     }
 
-    public String getMsg() {
-        return msg;
-    }
-
-    public void setMsg(String msg) {
-        this.msg = msg;
-    }
-
     @Override
     public String toString() {
-        return "RegistroResponse{" +
+        return "APIResponse{" +
                 "success=" + success +
                 ", token='" + token + '\'' +
                 ", token_refresh='" + token_refresh + '\'' +
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.GUI\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.TP2SOA\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\">\r\n        <activity android:name=\".HomeMenuActivity\" />\r\n        <activity android:name=\".RegisterActivity\" />\r\n        <activity\r\n            android:name=\".GmailAuthentication\"\r\n            android:label=\"@string/title_activity_gmail_authentication\"\r\n            android:theme=\"@style/Theme.TP2SOA.NoActionBar\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity android:name=\".LoginActivity\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/AndroidManifest.xml	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/AndroidManifest.xml	(date 1623475728960)
@@ -3,6 +3,7 @@
     package="com.example.GUI">
 
     <uses-permission android:name="android.permission.INTERNET" />
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
 
     <application
         android:allowBackup="true"
Index: app/src/main/java/APIs/EmailAPI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package APIs;\r\n\r\nimport android.content.Context;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.widget.Toast;\r\n\r\nimport java.util.Properties;\r\n\r\nimport javax.mail.Authenticator;\r\nimport javax.mail.Message;\r\nimport javax.mail.MessagingException;\r\nimport javax.mail.PasswordAuthentication;\r\nimport javax.mail.Session;\r\nimport javax.mail.Transport;\r\nimport javax.mail.internet.InternetAddress;\r\nimport javax.mail.internet.MimeMessage;\r\n\r\npublic class EmailAPI extends Thread {\r\n    private String gmail;\r\n    private long code;\r\n    private String mailHeader = \" Appname Authentication Code\";\r\n    private String mailBody = \"Your code is:\\n  \";\r\n    private Context c;\r\n    public EmailAPI(String mail,long code, Context c) {\r\n        this.gmail = mail;\r\n        this.code = code;\r\n        this.mailBody += code;\r\n        this.c = c;\r\n    }\r\n\r\n    public void run() {\r\n        String sender = \"gonzacastro99@gmail.com\";\r\n        String pass = \"\";\r\n\r\n        Properties p = new Properties();\r\n        p.put(\"mail.smtp.host\", \"smtp.googlemail.com\");\r\n        p.put(\"mail.smtp.socketFactory.port\", \"465\");\r\n        p.put(\"mail.smtp.socketFactory.class\", \"javax.net.ssl.SSLSocketFactory\");\r\n        p.put(\"mail.smtp.auth\", \"true\");\r\n        p.put(\"mail.smtp.port\", \"465\");\r\n\r\n        Session s;\r\n        try {\r\n            s = Session.getDefaultInstance(p, new Authenticator() {\r\n                @Override\r\n                protected PasswordAuthentication getPasswordAuthentication() {\r\n                    return new PasswordAuthentication(sender, pass);\r\n                }\r\n            });\r\n            if(s != null) {\r\n                Message m = new MimeMessage(s);\r\n                m.setFrom(new InternetAddress(sender));\r\n                m.setSubject(mailHeader);\r\n                m.setRecipients(Message.RecipientType.TO, InternetAddress.parse(gmail));\r\n                m.setContent(mailBody, \"text/plain\");\r\n\r\n                Transport.send(m);\r\n                //Looper.prepare();\r\n                //Toast.makeText(this.c, \"Enviado.\", Toast.LENGTH_LONG).show();\r\n                //Looper.loop();\r\n                Log.e(\"Estado\", \"Termine A\");\r\n            }\r\n        } catch(MessagingException e) {\r\n            Log.e(\"error\", e.toString());\r\n            Looper.prepare();\r\n            Toast.makeText(this.c, \"Error: mail inexistente\", Toast.LENGTH_LONG).show();\r\n            Looper.loop();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/APIs/EmailAPI.java	(revision dee24d06211fd3a6a92cc14d5966cfadf8d30a56)
+++ app/src/main/java/APIs/EmailAPI.java	(date 1623479421127)
@@ -30,8 +30,8 @@
     }
 
     public void run() {
-        String sender = "gonzacastro99@gmail.com";
-        String pass = "";
+        String sender = "tp2soa@gmail.com";
+        String pass = "unlam12345";
 
         Properties p = new Properties();
         p.put("mail.smtp.host", "smtp.googlemail.com");
